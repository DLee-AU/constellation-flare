---
name: "${DOCKER_COMPOSE_NAME}"

x-common-labels: &common-labels
  production_status: ${LABELS_PRODUCTION_STATUS}
  network_name: ${LABELS_NETWORK_NAME}
  network_type: ${LABELS_NETWORK_TYPE}
  node_role: ${LABELS_NODE_ROLE}
  node_name: ${LABELS_NODE_NAME}
  sub_system_key: ${LABELS_SUB_SYSTEM_KEY}
  sub_system_name: ${LABELS_SUB_SYSTEM_NAME}

x-logging-settings-fluentd: &logging-settings-fluentd
  logging:
    driver: fluentd
    options:
      # fluentd-address: "${FLUENTD_PROTOCOL}://${FLUENTD_HOST}:${FLUENTD_PORT}" # Logstash UDP input port
      fluentd-address: "${FLUENTD_HOST}:${FLUENTD_PORT}" # Logstash UDP input port
      tag: "${FLUENTD_TAG}"
      labels: "${FLUENTD_LABELS}"
      env: "${FLUENTD_ENV}"

x-logging-settings-gelf: &logging-settings-gelf
  logging:
    driver: gelf
    options:
      gelf-address: "${GRAYLOG_PROTOCOL}://${GRAYLOG_HOST}:${GRAYLOG_PORT}" # Logstash UDP input port
      tag: "${GRAYLOG_TAG}"
      gelf-compression-type: none
      labels: "${GRAYLOG_LABELS}"
      env: "${GRAYLOG_ENV}"

x-logging-settings-local: &logging-settings-local
  logging:
    driver: "local"
    options:
      max-size: "10m"
      max-file: "3"

x-logging-settings-json: &logging-settings-json
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "3"
      labels: "production_status,network_name,network_type"
      env: "os,customer"

x-logging-settings-journald: &logging-settings-journald
  logging:
    driver: "journald"
    options:
      tag: "{{.ImageName}}/{{.Name}}/{{.ID}}"
      labels: "production_status,network_name,network_type"
      env: "os,customer"

services:
  node:
    image: ${DOCKER_COMPOSE_IMAGE}
    container_name: "${DOCKER_COMPOSE_NAME}-node"
    <<: [ *logging-settings-fluentd ]
    restart: unless-stopped
    # command: "-reindex-chainstate"
    ports:
      - ${DOCKER_COMPOSE_NETWORK_INTERFACE_ADDRESS}:${PORT_HTTP_PUBLISHED}:${PORT_HTTP_TARGETED}
      - ${DOCKER_COMPOSE_NETWORK_INTERFACE_ADDRESS}:${PORT_STAKING_PUBLISHED}:${PORT_STAKING_TARGETED}
    volumes:
      - node-data:${VOLUME_NODE_DATA_TARGET:-/app/db}
      - node-logs:${VOLUME_NODE_LOGS_TARGET:-/app/logs}
      - ./configs:${CHAIN_CONFIG_DIR:-/app/conf}
      - ./certs/staking/:/root/.avalanchego/staking/
    labels:
      <<: *common-labels

volumes:
  node-data:
    name: "${VOLUME_NODE_DATA_NAME}"
    driver: local # Define the driver and options under the volume name
    driver_opts:
      type: none
      device: "${VOLUME_NODE_DATA_DEVICE}"
      o: bind
    labels:
      <<: *common-labels

  node-logs:
    name: "${VOLUME_NODE_LOGS_NAME}"
    driver: local # Define the driver and options under the volume name
    driver_opts:
      type: none
      device: "${VOLUME_NODE_LOGS_DEVICE}"
      o: bind
    labels:
      <<: *common-labels
